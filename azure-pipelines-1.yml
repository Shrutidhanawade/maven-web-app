
trigger:
- master  # Trigger the pipeline on changes to the master branch

pool:
  name: default

steps:
# Step 1: Install Apache Tomcat
- script: |
    echo "Installing Apache Tomcat 9..."
    wget https://downloads.apache.org/tomcat/tomcat-9/v9.0.95/bin/apache-tomcat-9.0.95.tar.gz
    sudo tar -xzf apache-tomcat-9.0.95.tar.gz -C /opt/
    sudo mv /opt/apache-tomcat-9.0.95 /opt/tomcat
    sudo chmod +x /opt/tomcat/bin/*.sh
    sudo sh /opt/tomcat/bin/startup.sh
  displayName: 'Install Apache Tomcat 9'

# Step 2: Build Project with Maven
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean package'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
  displayName: 'Build Project with Maven'

# Step 3: Deploy the WAR file to Tomcat
- script: |
    echo "Deploying WAR to Tomcat..."
    sudo cp target/*.war /opt/tomcat/webapps/
    sudo /opt/tomcat/bin/shutdown.sh
    sudo /opt/tomcat/bin/startup.sh
  displayName: 'Deploy WAR to Tomcat'

# Step 4: Monitor Application with Application Insights
- task: AzureCLI@2
  inputs:
    azureSubscription: 'ADT-60'  # Use the correct service connection name
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      # Set the active subscription
      az account set --subscription c7a98f37-d81d-4e9f-bd12-8efa59be841b

      # Monitor Application Health via Application Insights
      az monitor metrics list --resource /subscriptions/c7a98f37-d81d-4e9f-bd12-8efa59be841b/resourceGroups/nevault/providers/Microsoft.Insights/components/ADT-60 --metrics "availabilityResults/availabilityPercentage" --interval PT1M

# Step 5: Conditional Rollback on Failure
- script: |
    echo "Checking Application Health..."
    # Check for critical issues in the logs (sample logic)
    if [ $(/subscriptions/c7a98f37-d81d-4e9f-bd12-8efa59be841b/resourceGroups/nevault/providers/Microsoft.Insights/components/ADT-60 --metric "Failed Requests" --interval PT1M --query "value[0].total") -gt 10 ]; then
      echo "Detected failure. Initiating rollback..."
      sudo /opt/tomcat/bin/shutdown.sh
      # Rollback logic (e.g., redeploy previous stable version)
      sudo cp /opt/backup/previous_version.war /opt/tomcat/webapps/
      sudo /opt/tomcat/bin/startup.sh
      echo "Rollback completed."
    else
      echo "Application is healthy."
    fi
  displayName: 'Monitor and Rollback'
